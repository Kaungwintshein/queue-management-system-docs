{
  "info": {
    "name": "Queue Management System - Authentication API",
    "description": "Complete authentication API collection for the Queue Management System",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3001",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.success && responseJson.data && responseJson.data.token) {",
                  "        pm.collectionVariables.set('auth_token', responseJson.data.token);",
                  "        console.log('Auth token saved to collection variable');",
                  "        console.log('Response format: ', JSON.stringify(responseJson, null, 2));",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"admin@example.com\",\n  \"password\": \"admin123\",\n  \"remember\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Authenticate user and receive JWT token"
          },
          "response": []
        },
        {
          "name": "Get Current User Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/me",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "me"]
            },
            "description": "Get the authenticated user's profile information"
          },
          "response": []
        },
        {
          "name": "Change Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"currentpass123\",\n  \"newPassword\": \"newpass123\",\n  \"confirmNewPassword\": \"newpass123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/change-password",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "change-password"]
            },
            "description": "Change the authenticated user's password"
          },
          "response": []
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "logout"]
            },
            "description": "Logout the authenticated user"
          },
          "response": []
        }
      ],
      "description": "Core authentication endpoints"
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Register User (Admin Only)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"newuser\",\n  \"email\": \"newuser@example.com\",\n  \"password\": \"password123\",\n  \"confirmPassword\": \"password123\",\n  \"role\": \"staff\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Register a new user (admin/super_admin only)"
          },
          "response": []
        },
        {
          "name": "List Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/users?limit=20&offset=0",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "users"],
              "query": [
                {
                  "key": "role",
                  "value": "staff",
                  "disabled": true
                },
                {
                  "key": "isActive",
                  "value": "true",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "offset",
                  "value": "0"
                }
              ]
            },
            "description": "Get list of users in the organization (admin only)"
          },
          "response": []
        },
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"staffuser\",\n  \"email\": \"staff@example.com\",\n  \"password\": \"staffpass123\",\n  \"role\": \"staff\",\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/users",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "users"]
            },
            "description": "Create a new user (admin/super_admin only)"
          },
          "response": []
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "users", "{{user_id}}"]
            },
            "description": "Get user details by ID"
          },
          "response": []
        },
        {
          "name": "Update User",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"updatedusername\",\n  \"email\": \"updated@example.com\",\n  \"role\": \"admin\",\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "users", "{{user_id}}"]
            },
            "description": "Update user information"
          },
          "response": []
        },
        {
          "name": "Deactivate User",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/users/{{user_id}}/deactivate",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "users", "{{user_id}}", "deactivate"]
            },
            "description": "Deactivate a user account (admin/super_admin only)"
          },
          "response": []
        }
      ],
      "description": "User management endpoints (admin access required)"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Add any global pre-request scripts here",
          "console.log('Making request to: ' + pm.request.url);"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test scripts",
          "pm.test('Response time is less than 5000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "if (pm.response.code !== 429) {",
          "    pm.test('Response has standardized format', function () {",
          "        const responseJson = pm.response.json();",
          "        pm.expect(responseJson).to.have.property('success');",
          "        pm.expect(responseJson).to.have.property('message');",
          "        pm.expect(responseJson).to.have.property('timestamp');",
          "        pm.expect(responseJson.success).to.be.a('boolean');",
          "        pm.expect(responseJson.message).to.be.a('string');",
          "    });",
          "",
          "    if (pm.response.code >= 200 && pm.response.code < 300) {",
          "        pm.test('Success response has data field', function () {",
          "            const responseJson = pm.response.json();",
          "            pm.expect(responseJson.success).to.be.true;",
          "            if (responseJson.data !== null) {",
          "                pm.expect(responseJson).to.have.property('data');",
          "            }",
          "        });",
          "    } else {",
          "        pm.test('Error response has error field', function () {",
          "            const responseJson = pm.response.json();",
          "            pm.expect(responseJson.success).to.be.false;",
          "            pm.expect(responseJson).to.have.property('error');",
          "        });",
          "    }",
          "}"
        ]
      }
    }
  ]
}
